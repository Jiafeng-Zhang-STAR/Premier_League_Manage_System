/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Club.Health.Doctor;

import TheClub.Health.Doctor.Doctor;
import java.awt.BorderLayout;
import java.awt.Color;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JRootPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*; 
//import javax.swing.ButtonModel;
//import javax.swing.JButton;

/**
 *
 * @author Jiafeng
 */
public class DoctorFaceToFaceDiagnoseJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorHistoryJPanel
     */
    Doctor doctor;
    public DoctorFaceToFaceDiagnoseJPanel(Doctor doctorTemp) {
        initComponents();
//        jPanel1.add(jMenuBar1,BorderLayout.NORTH);
    setJPanelMenuBar(this, faceToFaceMainjPanel,faceToFaceMenuBar);
//      fillingAppointmentHistoryTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        faceToFaceMenuBar = new javax.swing.JMenuBar();
        appointmentMenu = new javax.swing.JMenu();
        chooseAppointmentMenuItem = new javax.swing.JMenuItem();
        playerInfoMenu = new javax.swing.JMenu();
        basicInfoMenuItem = new javax.swing.JMenuItem();
        vitalSignHistoryMenuItem = new javax.swing.JMenuItem();
        diagnosisHistoryMenuItem = new javax.swing.JMenuItem();
        medicalPictureHistoryMenuItem = new javax.swing.JMenuItem();
        prescriptionHistoryMenuItem = new javax.swing.JMenuItem();
        solutionHistoryMenuItem = new javax.swing.JMenuItem();
        diagnoseMenu = new javax.swing.JMenu();
        vitualSignsMenuItem = new javax.swing.JMenuItem();
        symptomMenuItem = new javax.swing.JMenuItem();
        uploadPictureMenu = new javax.swing.JMenu();
        uploadPictureMenuItem = new javax.swing.JMenuItem();
        solutionMenu = new javax.swing.JMenu();
        prescriptionMenuItem = new javax.swing.JMenuItem();
        solutionMenuItem = new javax.swing.JMenuItem();
        previewPrintMenu = new javax.swing.JMenu();
        previewPrintMenuItem = new javax.swing.JMenuItem();
        faceToFaceMainjPanel = new javax.swing.JPanel();
        cards = new javax.swing.JPanel();
        chooseAppointmentCard1 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        appointmentHistoryTable = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        basicInfoCard2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        vitalSignHistoryCard3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        diagnosisHistoryCard4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        medicalPictureHistoryCard5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        prescriptionHistoryCard6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        solutionHistoryCard7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        vitualSignsCard8 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        symptomCard9 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        uploadPictureCard10 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        prescriptionCard11 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        solutionCard12 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        previewPrintCard13 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();

        faceToFaceMenuBar.setMaximumSize(new java.awt.Dimension(495, 32768));
        faceToFaceMenuBar.setMinimumSize(new java.awt.Dimension(495, 30));
        faceToFaceMenuBar.setPreferredSize(new java.awt.Dimension(495, 30));

        appointmentMenu.setText("Appointment");
        appointmentMenu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        appointmentMenu.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        appointmentMenu.setMaximumSize(new java.awt.Dimension(83, 30));
        appointmentMenu.setMinimumSize(new java.awt.Dimension(83, 30));
        appointmentMenu.setPreferredSize(new java.awt.Dimension(83, 30));

        chooseAppointmentMenuItem.setText("Choose Appointment");
        chooseAppointmentMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseAppointmentMenuItemActionPerformed(evt);
            }
        });
        appointmentMenu.add(chooseAppointmentMenuItem);

        faceToFaceMenuBar.add(appointmentMenu);

        playerInfoMenu.setText("Player Info");
        playerInfoMenu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        playerInfoMenu.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        playerInfoMenu.setMaximumSize(new java.awt.Dimension(78, 30));
        playerInfoMenu.setMinimumSize(new java.awt.Dimension(78, 30));
        playerInfoMenu.setPreferredSize(new java.awt.Dimension(78, 30));

        basicInfoMenuItem.setText("Basic Information");
        basicInfoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                basicInfoMenuItemActionPerformed(evt);
            }
        });
        playerInfoMenu.add(basicInfoMenuItem);

        vitalSignHistoryMenuItem.setText("Vital Signs History");
        vitalSignHistoryMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vitalSignHistoryMenuItemActionPerformed(evt);
            }
        });
        playerInfoMenu.add(vitalSignHistoryMenuItem);

        diagnosisHistoryMenuItem.setText("Diagnosis History");
        diagnosisHistoryMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diagnosisHistoryMenuItemActionPerformed(evt);
            }
        });
        playerInfoMenu.add(diagnosisHistoryMenuItem);

        medicalPictureHistoryMenuItem.setText("Medical Pictures History");
        medicalPictureHistoryMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medicalPictureHistoryMenuItemActionPerformed(evt);
            }
        });
        playerInfoMenu.add(medicalPictureHistoryMenuItem);

        prescriptionHistoryMenuItem.setText("Prescriptions History");
        prescriptionHistoryMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prescriptionHistoryMenuItemActionPerformed(evt);
            }
        });
        playerInfoMenu.add(prescriptionHistoryMenuItem);

        solutionHistoryMenuItem.setText("Solutions History");
        solutionHistoryMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                solutionHistoryMenuItemActionPerformed(evt);
            }
        });
        playerInfoMenu.add(solutionHistoryMenuItem);

        faceToFaceMenuBar.add(playerInfoMenu);

        diagnoseMenu.setText("Diagnose");
        diagnoseMenu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        diagnoseMenu.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        diagnoseMenu.setMaximumSize(new java.awt.Dimension(78, 30));
        diagnoseMenu.setMinimumSize(new java.awt.Dimension(78, 30));
        diagnoseMenu.setPreferredSize(new java.awt.Dimension(78, 30));

        vitualSignsMenuItem.setText("Fill Vital Signs");
        vitualSignsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vitualSignsMenuItemActionPerformed(evt);
            }
        });
        diagnoseMenu.add(vitualSignsMenuItem);

        symptomMenuItem.setText("Fill Symptom");
        symptomMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                symptomMenuItemActionPerformed(evt);
            }
        });
        diagnoseMenu.add(symptomMenuItem);

        faceToFaceMenuBar.add(diagnoseMenu);

        uploadPictureMenu.setText("Picture");
        uploadPictureMenu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        uploadPictureMenu.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        uploadPictureMenu.setMaximumSize(new java.awt.Dimension(78, 30));
        uploadPictureMenu.setMinimumSize(new java.awt.Dimension(78, 30));
        uploadPictureMenu.setPreferredSize(new java.awt.Dimension(78, 30));

        uploadPictureMenuItem.setText("Upload Medical Picture");
        uploadPictureMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadPictureMenuItemActionPerformed(evt);
            }
        });
        uploadPictureMenu.add(uploadPictureMenuItem);

        faceToFaceMenuBar.add(uploadPictureMenu);

        solutionMenu.setText("Solution");
        solutionMenu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        solutionMenu.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        solutionMenu.setMaximumSize(new java.awt.Dimension(78, 30));
        solutionMenu.setMinimumSize(new java.awt.Dimension(78, 30));
        solutionMenu.setPreferredSize(new java.awt.Dimension(78, 30));

        prescriptionMenuItem.setText("Fill Prescription");
        prescriptionMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prescriptionMenuItemActionPerformed(evt);
            }
        });
        solutionMenu.add(prescriptionMenuItem);

        solutionMenuItem.setText("Fill Solution");
        solutionMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                solutionMenuItemActionPerformed(evt);
            }
        });
        solutionMenu.add(solutionMenuItem);

        faceToFaceMenuBar.add(solutionMenu);

        previewPrintMenu.setText("Review Print");
        previewPrintMenu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        previewPrintMenu.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        previewPrintMenu.setMaximumSize(new java.awt.Dimension(78, 30));
        previewPrintMenu.setMinimumSize(new java.awt.Dimension(78, 30));
        previewPrintMenu.setPreferredSize(new java.awt.Dimension(78, 30));

        previewPrintMenuItem.setText("Output Doc");
        previewPrintMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previewPrintMenuItemActionPerformed(evt);
            }
        });
        previewPrintMenu.add(previewPrintMenuItem);

        faceToFaceMenuBar.add(previewPrintMenu);

        setMaximumSize(new java.awt.Dimension(495, 600));
        setMinimumSize(new java.awt.Dimension(295, 600));
        setPreferredSize(new java.awt.Dimension(495, 600));

        faceToFaceMainjPanel.setMinimumSize(new java.awt.Dimension(495, 600));

        cards.setMaximumSize(new java.awt.Dimension(495, 565));
        cards.setMinimumSize(new java.awt.Dimension(495, 565));
        cards.setPreferredSize(new java.awt.Dimension(495, 565));
        cards.setLayout(new java.awt.CardLayout());

        jLabel14.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel14.setText("Please Make Diagnosis Appointment");

        appointmentHistoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Player", "Doctor", "Date", "Status", "Result"
            }
        ));
        jScrollPane1.setViewportView(appointmentHistoryTable);

        jButton4.setText("Fresh Table");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout chooseAppointmentCard1Layout = new javax.swing.GroupLayout(chooseAppointmentCard1);
        chooseAppointmentCard1.setLayout(chooseAppointmentCard1Layout);
        chooseAppointmentCard1Layout.setHorizontalGroup(
            chooseAppointmentCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chooseAppointmentCard1Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, chooseAppointmentCard1Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(chooseAppointmentCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );
        chooseAppointmentCard1Layout.setVerticalGroup(
            chooseAppointmentCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chooseAppointmentCard1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addContainerGap(87, Short.MAX_VALUE))
        );

        cards.add(chooseAppointmentCard1, "card2");

        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout basicInfoCard2Layout = new javax.swing.GroupLayout(basicInfoCard2);
        basicInfoCard2.setLayout(basicInfoCard2Layout);
        basicInfoCard2Layout.setHorizontalGroup(
            basicInfoCard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, basicInfoCard2Layout.createSequentialGroup()
                .addContainerGap(334, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(123, 123, 123))
        );
        basicInfoCard2Layout.setVerticalGroup(
            basicInfoCard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(basicInfoCard2Layout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addComponent(jLabel2)
                .addContainerGap(334, Short.MAX_VALUE))
        );

        cards.add(basicInfoCard2, "card2");

        jLabel3.setText("jLabel3");

        javax.swing.GroupLayout vitalSignHistoryCard3Layout = new javax.swing.GroupLayout(vitalSignHistoryCard3);
        vitalSignHistoryCard3.setLayout(vitalSignHistoryCard3Layout);
        vitalSignHistoryCard3Layout.setHorizontalGroup(
            vitalSignHistoryCard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vitalSignHistoryCard3Layout.createSequentialGroup()
                .addGap(171, 171, 171)
                .addComponent(jLabel3)
                .addContainerGap(286, Short.MAX_VALUE))
        );
        vitalSignHistoryCard3Layout.setVerticalGroup(
            vitalSignHistoryCard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vitalSignHistoryCard3Layout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(jLabel3)
                .addContainerGap(374, Short.MAX_VALUE))
        );

        cards.add(vitalSignHistoryCard3, "card2");

        jLabel4.setText("jLabel4");

        javax.swing.GroupLayout diagnosisHistoryCard4Layout = new javax.swing.GroupLayout(diagnosisHistoryCard4);
        diagnosisHistoryCard4.setLayout(diagnosisHistoryCard4Layout);
        diagnosisHistoryCard4Layout.setHorizontalGroup(
            diagnosisHistoryCard4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(diagnosisHistoryCard4Layout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addComponent(jLabel4)
                .addContainerGap(257, Short.MAX_VALUE))
        );
        diagnosisHistoryCard4Layout.setVerticalGroup(
            diagnosisHistoryCard4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(diagnosisHistoryCard4Layout.createSequentialGroup()
                .addGap(189, 189, 189)
                .addComponent(jLabel4)
                .addContainerGap(360, Short.MAX_VALUE))
        );

        cards.add(diagnosisHistoryCard4, "card2");

        jLabel5.setText("jLabel5");

        javax.swing.GroupLayout medicalPictureHistoryCard5Layout = new javax.swing.GroupLayout(medicalPictureHistoryCard5);
        medicalPictureHistoryCard5.setLayout(medicalPictureHistoryCard5Layout);
        medicalPictureHistoryCard5Layout.setHorizontalGroup(
            medicalPictureHistoryCard5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(medicalPictureHistoryCard5Layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(jLabel5)
                .addContainerGap(285, Short.MAX_VALUE))
        );
        medicalPictureHistoryCard5Layout.setVerticalGroup(
            medicalPictureHistoryCard5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(medicalPictureHistoryCard5Layout.createSequentialGroup()
                .addGap(242, 242, 242)
                .addComponent(jLabel5)
                .addContainerGap(307, Short.MAX_VALUE))
        );

        cards.add(medicalPictureHistoryCard5, "card2");

        jLabel6.setText("jLabel6");

        javax.swing.GroupLayout prescriptionHistoryCard6Layout = new javax.swing.GroupLayout(prescriptionHistoryCard6);
        prescriptionHistoryCard6.setLayout(prescriptionHistoryCard6Layout);
        prescriptionHistoryCard6Layout.setHorizontalGroup(
            prescriptionHistoryCard6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, prescriptionHistoryCard6Layout.createSequentialGroup()
                .addContainerGap(251, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(206, 206, 206))
        );
        prescriptionHistoryCard6Layout.setVerticalGroup(
            prescriptionHistoryCard6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(prescriptionHistoryCard6Layout.createSequentialGroup()
                .addGap(176, 176, 176)
                .addComponent(jLabel6)
                .addContainerGap(373, Short.MAX_VALUE))
        );

        cards.add(prescriptionHistoryCard6, "card2");

        jLabel7.setText("jLabel7");

        javax.swing.GroupLayout solutionHistoryCard7Layout = new javax.swing.GroupLayout(solutionHistoryCard7);
        solutionHistoryCard7.setLayout(solutionHistoryCard7Layout);
        solutionHistoryCard7Layout.setHorizontalGroup(
            solutionHistoryCard7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(solutionHistoryCard7Layout.createSequentialGroup()
                .addGap(190, 190, 190)
                .addComponent(jLabel7)
                .addContainerGap(267, Short.MAX_VALUE))
        );
        solutionHistoryCard7Layout.setVerticalGroup(
            solutionHistoryCard7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(solutionHistoryCard7Layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(jLabel7)
                .addContainerGap(395, Short.MAX_VALUE))
        );

        cards.add(solutionHistoryCard7, "card2");

        jLabel8.setText("jLabel8");

        javax.swing.GroupLayout vitualSignsCard8Layout = new javax.swing.GroupLayout(vitualSignsCard8);
        vitualSignsCard8.setLayout(vitualSignsCard8Layout);
        vitualSignsCard8Layout.setHorizontalGroup(
            vitualSignsCard8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vitualSignsCard8Layout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addComponent(jLabel8)
                .addContainerGap(298, Short.MAX_VALUE))
        );
        vitualSignsCard8Layout.setVerticalGroup(
            vitualSignsCard8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vitualSignsCard8Layout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addComponent(jLabel8)
                .addContainerGap(338, Short.MAX_VALUE))
        );

        cards.add(vitualSignsCard8, "card2");

        jLabel9.setText("jLabel9");

        javax.swing.GroupLayout symptomCard9Layout = new javax.swing.GroupLayout(symptomCard9);
        symptomCard9.setLayout(symptomCard9Layout);
        symptomCard9Layout.setHorizontalGroup(
            symptomCard9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, symptomCard9Layout.createSequentialGroup()
                .addContainerGap(261, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(196, 196, 196))
        );
        symptomCard9Layout.setVerticalGroup(
            symptomCard9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(symptomCard9Layout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addComponent(jLabel9)
                .addContainerGap(385, Short.MAX_VALUE))
        );

        cards.add(symptomCard9, "card2");

        jLabel10.setText("jLabel10");

        javax.swing.GroupLayout uploadPictureCard10Layout = new javax.swing.GroupLayout(uploadPictureCard10);
        uploadPictureCard10.setLayout(uploadPictureCard10Layout);
        uploadPictureCard10Layout.setHorizontalGroup(
            uploadPictureCard10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, uploadPictureCard10Layout.createSequentialGroup()
                .addContainerGap(235, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(215, 215, 215))
        );
        uploadPictureCard10Layout.setVerticalGroup(
            uploadPictureCard10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uploadPictureCard10Layout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addComponent(jLabel10)
                .addContainerGap(385, Short.MAX_VALUE))
        );

        cards.add(uploadPictureCard10, "card2");

        jLabel11.setText("jLabel11");

        javax.swing.GroupLayout prescriptionCard11Layout = new javax.swing.GroupLayout(prescriptionCard11);
        prescriptionCard11.setLayout(prescriptionCard11Layout);
        prescriptionCard11Layout.setHorizontalGroup(
            prescriptionCard11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, prescriptionCard11Layout.createSequentialGroup()
                .addContainerGap(294, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(156, 156, 156))
        );
        prescriptionCard11Layout.setVerticalGroup(
            prescriptionCard11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(prescriptionCard11Layout.createSequentialGroup()
                .addGap(173, 173, 173)
                .addComponent(jLabel11)
                .addContainerGap(376, Short.MAX_VALUE))
        );

        cards.add(prescriptionCard11, "card2");

        jLabel12.setText("jLabel12");

        javax.swing.GroupLayout solutionCard12Layout = new javax.swing.GroupLayout(solutionCard12);
        solutionCard12.setLayout(solutionCard12Layout);
        solutionCard12Layout.setHorizontalGroup(
            solutionCard12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, solutionCard12Layout.createSequentialGroup()
                .addContainerGap(294, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(156, 156, 156))
        );
        solutionCard12Layout.setVerticalGroup(
            solutionCard12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(solutionCard12Layout.createSequentialGroup()
                .addGap(231, 231, 231)
                .addComponent(jLabel12)
                .addContainerGap(318, Short.MAX_VALUE))
        );

        cards.add(solutionCard12, "card2");

        jLabel13.setText("jLabel13");

        javax.swing.GroupLayout previewPrintCard13Layout = new javax.swing.GroupLayout(previewPrintCard13);
        previewPrintCard13.setLayout(previewPrintCard13Layout);
        previewPrintCard13Layout.setHorizontalGroup(
            previewPrintCard13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, previewPrintCard13Layout.createSequentialGroup()
                .addContainerGap(235, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addGap(215, 215, 215))
        );
        previewPrintCard13Layout.setVerticalGroup(
            previewPrintCard13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(previewPrintCard13Layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(jLabel13)
                .addContainerGap(419, Short.MAX_VALUE))
        );

        cards.add(previewPrintCard13, "card2");

        javax.swing.GroupLayout faceToFaceMainjPanelLayout = new javax.swing.GroupLayout(faceToFaceMainjPanel);
        faceToFaceMainjPanel.setLayout(faceToFaceMainjPanelLayout);
        faceToFaceMainjPanelLayout.setHorizontalGroup(
            faceToFaceMainjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(faceToFaceMainjPanelLayout.createSequentialGroup()
                .addComponent(cards, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );
        faceToFaceMainjPanelLayout.setVerticalGroup(
            faceToFaceMainjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, faceToFaceMainjPanelLayout.createSequentialGroup()
                .addGap(0, 35, Short.MAX_VALUE)
                .addComponent(cards, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(faceToFaceMainjPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(faceToFaceMainjPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void chooseAppointmentMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseAppointmentMenuItemActionPerformed
        // TODO add your handling code here:
        cards.removeAll();
        cards.add(chooseAppointmentCard1);
        cards.repaint();
        cards.revalidate();
    }//GEN-LAST:event_chooseAppointmentMenuItemActionPerformed

    private void basicInfoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_basicInfoMenuItemActionPerformed
        // TODO add your handling code here:
        cards.removeAll();
        cards.add(basicInfoCard2);
        cards.repaint();
        cards.revalidate();
    }//GEN-LAST:event_basicInfoMenuItemActionPerformed

    private void vitalSignHistoryMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vitalSignHistoryMenuItemActionPerformed
        // TODO add your handling code here:
        cards.removeAll();
        cards.add(vitalSignHistoryCard3);
        cards.repaint();
        cards.revalidate();
    }//GEN-LAST:event_vitalSignHistoryMenuItemActionPerformed

    private void diagnosisHistoryMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diagnosisHistoryMenuItemActionPerformed
        // TODO add your handling code here:
        cards.removeAll();
        cards.add(diagnosisHistoryCard4);
        cards.repaint();
        cards.revalidate();
    }//GEN-LAST:event_diagnosisHistoryMenuItemActionPerformed

    private void medicalPictureHistoryMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medicalPictureHistoryMenuItemActionPerformed
        // TODO add your handling code here:
        cards.removeAll();
        cards.add(medicalPictureHistoryCard5);
        cards.repaint();
        cards.revalidate();
    }//GEN-LAST:event_medicalPictureHistoryMenuItemActionPerformed

    private void prescriptionHistoryMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prescriptionHistoryMenuItemActionPerformed
        // TODO add your handling code here:
        cards.removeAll();
        cards.add(prescriptionHistoryCard6);
        cards.repaint();
        cards.revalidate();
    }//GEN-LAST:event_prescriptionHistoryMenuItemActionPerformed

    private void solutionHistoryMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_solutionHistoryMenuItemActionPerformed
        // TODO add your handling code here:
        cards.removeAll();
        cards.add(solutionHistoryCard7);
        cards.repaint();
        cards.revalidate();
    }//GEN-LAST:event_solutionHistoryMenuItemActionPerformed

    private void vitualSignsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vitualSignsMenuItemActionPerformed
        // TODO add your handling code here:
        cards.removeAll();
        cards.add(vitualSignsCard8);
        cards.repaint();
        cards.revalidate();
    }//GEN-LAST:event_vitualSignsMenuItemActionPerformed

    private void symptomMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_symptomMenuItemActionPerformed
        // TODO add your handling code here:
        cards.removeAll();
        cards.add(symptomCard9);
        cards.repaint();
        cards.revalidate();
    }//GEN-LAST:event_symptomMenuItemActionPerformed

    private void uploadPictureMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadPictureMenuItemActionPerformed
        // TODO add your handling code here:
        cards.removeAll();
        cards.add(uploadPictureCard10);
        cards.repaint();
        cards.revalidate();
    }//GEN-LAST:event_uploadPictureMenuItemActionPerformed

    private void prescriptionMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prescriptionMenuItemActionPerformed
        // TODO add your handling code here:
        cards.removeAll();
        cards.add(prescriptionCard11);
        cards.repaint();
        cards.revalidate();
    }//GEN-LAST:event_prescriptionMenuItemActionPerformed

    private void solutionMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_solutionMenuItemActionPerformed
        // TODO add your handling code here:
        cards.removeAll();
        cards.add(solutionCard12);
        cards.repaint();
        cards.revalidate();
    }//GEN-LAST:event_solutionMenuItemActionPerformed

    private void previewPrintMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previewPrintMenuItemActionPerformed
        // TODO add your handling code here:
        cards.removeAll();
        cards.add(previewPrintCard13);
        cards.repaint();
        cards.revalidate();
    }//GEN-LAST:event_previewPrintMenuItemActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
//        fillingAppointmentHistoryTable();
    }//GEN-LAST:event_jButton4ActionPerformed

    public static void setJPanelMenuBar(JPanel parent, JPanel child, JMenuBar menuBar) {
        parent.removeAll();
        parent.setLayout(new BorderLayout());
        JRootPane root = new JRootPane();
        parent.add(root, BorderLayout.CENTER);
        root.setJMenuBar(menuBar);
        root.getContentPane().add(child);
        parent.putClientProperty("root", root);  //if you need later
    }
    
//    private void fillingAppointmentHistoryTable() {
//        DefaultTableModel model = (DefaultTableModel) appointmentHistoryTable.getModel();
//        model.setRowCount(0);
//        try{
//            Class.forName("com.mysql.cj.jdbc.Driver");
//            String url = "jdbc:mysql://localhost:3306/premierleague";
//            String username = "root";
//            String password = "abcd1234!";
//            Connection connection = DriverManager.getConnection(url, username, password);
//            Statement statement = connection.createStatement();
//            
//            String sql = "SELECT * FROM club_diagnose_appointment WHERE "+
//                         "player_id=\'"+this.player.getUsername()+"\'";
//            System.out.print("45454");
//            ResultSet resultSet = statement.executeQuery(sql);
//            
//            while(resultSet.next()){
//                String doctorUsernameTemp;
//                String doctorNameTemp = null;
//                
//
//                
//                Object[] row = new Object[6];
//                
//                row[0] = resultSet.getObject("id");
//                
//                
//                row[1] = this.player.getName();
//
//                
//                String doctorUsername = resultSet.getObject("doctor_id").toString();        
//                int length1 = player.getTeam().getDoctorCatalog().getDoctorCata().size();
//                for(int i=0;i<length1;i++){
//                        doctorUsernameTemp=player.getTeam().getDoctorCatalog().getDoctorCata().get(i).getUsername();
//                        doctorNameTemp=player.getTeam().getDoctorCatalog().getDoctorCata().get(i).getName();
//                    if(doctorUsernameTemp.equals(doctorUsername)){
//                         break;
//                     }
//                 }
//                row[2] = doctorNameTemp;
////                                row[2] = resultSet.getObject("doctor_id");
//               
//                
//                row[3] = resultSet.getObject("date");
//                row[4] = resultSet.getObject("status");
//                row[5] = resultSet.getObject("result");
//                model.addRow(row);
//          }
//            resultSet.close();
//            statement.close();
//            connection.close();
//        }catch(ClassNotFoundException e){
//            e.printStackTrace();
//                
//        }catch(SQLException b){
//            b.printStackTrace();
//        }
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable appointmentHistoryTable;
    private javax.swing.JMenu appointmentMenu;
    private javax.swing.JPanel basicInfoCard2;
    private javax.swing.JMenuItem basicInfoMenuItem;
    private javax.swing.JPanel cards;
    private javax.swing.JPanel chooseAppointmentCard1;
    private javax.swing.JMenuItem chooseAppointmentMenuItem;
    private javax.swing.JMenu diagnoseMenu;
    private javax.swing.JPanel diagnosisHistoryCard4;
    private javax.swing.JMenuItem diagnosisHistoryMenuItem;
    private javax.swing.JPanel faceToFaceMainjPanel;
    private javax.swing.JMenuBar faceToFaceMenuBar;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel medicalPictureHistoryCard5;
    private javax.swing.JMenuItem medicalPictureHistoryMenuItem;
    private javax.swing.JMenu playerInfoMenu;
    private javax.swing.JPanel prescriptionCard11;
    private javax.swing.JPanel prescriptionHistoryCard6;
    private javax.swing.JMenuItem prescriptionHistoryMenuItem;
    private javax.swing.JMenuItem prescriptionMenuItem;
    private javax.swing.JPanel previewPrintCard13;
    private javax.swing.JMenu previewPrintMenu;
    private javax.swing.JMenuItem previewPrintMenuItem;
    private javax.swing.JPanel solutionCard12;
    private javax.swing.JPanel solutionHistoryCard7;
    private javax.swing.JMenuItem solutionHistoryMenuItem;
    private javax.swing.JMenu solutionMenu;
    private javax.swing.JMenuItem solutionMenuItem;
    private javax.swing.JPanel symptomCard9;
    private javax.swing.JMenuItem symptomMenuItem;
    private javax.swing.JPanel uploadPictureCard10;
    private javax.swing.JMenu uploadPictureMenu;
    private javax.swing.JMenuItem uploadPictureMenuItem;
    private javax.swing.JPanel vitalSignHistoryCard3;
    private javax.swing.JMenuItem vitalSignHistoryMenuItem;
    private javax.swing.JPanel vitualSignsCard8;
    private javax.swing.JMenuItem vitualSignsMenuItem;
    // End of variables declaration//GEN-END:variables
}
